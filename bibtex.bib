
@article{carpenter2000bootstrap,
author = {Carpenter, James and Bithell, John},
date-added = {2022-01-26 16:21:27 -0500},
date-modified = {2022-01-26 16:22:14 -0500},
journal = {Statistics in medicine},
keywords = { bootstrap, confidence interval; random, abc},
number = {9},
pages = {1141--1164},
publisher = {Wiley Online Library},
title = {Bootstrap confidence intervals: when, which, what? A practical guide for medical statisticians},
volume = {19},
year = {2000},
bdsk-file-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxDBLi4vTGlicmFyeS9DbG91ZFN0b3JhZ2UvT25lRHJpdmUtWW91bmdzdG93blN0YXRlVW5pdmVyc2l0eS9kb2MvbXlfbGlicmFyeS9wZGYvQ2FycGVudGVyIC0gMjAwMCAtIEJvb3RzdHJhcCBjb25maWRlbmNlIGludGVydmFscyB3aGVuLCB3aGljaCwgd2hhdCBBIHByYWN0aWNhbCBndWlkZSBmb3IgbWVkaWNhbCBzdGF0aXN0aWNpYW5zLnBkZk8RA1IAAAAAA1IAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////x9DYXJwZW50ZXIgLSAyMDAwIC0jRkZGRkZGRkYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAEABwAACiBjdQAAAAAAAAAAAAAAAAADcGRmAAACAMovOlVzZXJzOmZ5dTpMaWJyYXJ5OkNsb3VkU3RvcmFnZTpPbmVEcml2ZS1Zb3VuZ3N0b3duU3RhdGVVbml2ZXJzaXR5OmRvYzpteV9saWJyYXJ5OnBkZjpDYXJwZW50ZXIgLSAyMDAwIC0gQm9vdHN0cmFwIGNvbmZpZGVuY2UgaW50ZXJ2YWxzIHdoZW4sIHdoaWNoLCB3aGF0IEEgcHJhY3RpY2FsIGd1aWRlIGZvciBtZWRpY2FsIHN0YXRpc3RpY2lhbnMucGRmAA4A6ABzAEMAYQByAHAAZQBuAHQAZQByACAALQAgADIAMAAwADAAIAAtACAAQgBvAG8AdABzAHQAcgBhAHAAIABjAG8AbgBmAGkAZABlAG4AYwBlACAAaQBuAHQAZQByAHYAYQBsAHMAIAB3AGgAZQBuACwAIAB3AGgAaQBjAGgALAAgAHcAaABhAHQAIABBACAAcAByAGEAYwB0AGkAYwBhAGwAIABnAHUAaQBkAGUAIABmAG8AcgAgAG0AZQBkAGkAYwBhAGwAIABzAHQAYQB0AGkAcwB0AGkAYwBpAGEAbgBzAC4AcABkAGYADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgDIVXNlcnMvZnl1L0xpYnJhcnkvQ2xvdWRTdG9yYWdlL09uZURyaXZlLVlvdW5nc3Rvd25TdGF0ZVVuaXZlcnNpdHkvZG9jL215X2xpYnJhcnkvcGRmL0NhcnBlbnRlciAtIDIwMDAgLSBCb290c3RyYXAgY29uZmlkZW5jZSBpbnRlcnZhbHMgd2hlbiwgd2hpY2gsIHdoYXQgQSBwcmFjdGljYWwgZ3VpZGUgZm9yIG1lZGljYWwgc3RhdGlzdGljaWFucy5wZGYAEwABLwAAFQACAAr//wAAAAgADQAaACQA6AAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAQ+}}

@inproceedings{haas-97-sigmod,
author = {Haas, P.J.},
booktitle = {Proceedings. Ninth International Conference on Scientific and Statistical Database Management (Cat. No.97TB100150)},
date-added = {2022-01-10 13:59:49 -0500},
date-modified = {2022-01-10 14:17:59 -0500},
doi = {10.1109/SSDM.1997.621151},
keywords = {Query , database; sampling;confidence interval; aqp},
pages = {51-62},
title = {Large-sample and deterministic confidence intervals for online aggregation},
year = {1997},
bdsk-file-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxEBAi4uL0xpYnJhcnkvR3JvdXAgQ29udGFpbmVycy9VQkY4VDM0Nkc5Lk9uZURyaXZlU3RhbmRhbG9uZVN1aXRlL09uZURyaXZlIC0gWW91bmdzdG93biBTdGF0ZSBVbml2ZXJzaXR5Lm5vaW5kZXgvT25lRHJpdmUgLSBZb3VuZ3N0b3duIFN0YXRlIFVuaXZlcnNpdHkvZG9jL215X2xpYnJhcnkvcGRmL2hhYXMgLSA5NyAtIExhcmdlLXNhbXBsZSBhbmQgZGV0ZXJtaW5pc3RpYyBjb25maWRlbmNlIGludGVydmFscyBmb3Igb25saW5lIGFnZ3JlZ2F0aW9uLnBkZk8RA6QAAAAAA6QAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////x9oYWFzIC0gOTcgLSBMYXJnZS0jRkZGRkZGRkYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAEACQAACiBjdQAAAAAAAAAAAAAAAAADcGRmAAACAQsvOlVzZXJzOmZ5dTpMaWJyYXJ5Okdyb3VwIENvbnRhaW5lcnM6VUJGOFQzNDZHOS5PbmVEcml2ZVN0YW5kYWxvbmVTdWl0ZTpPbmVEcml2ZSAtIFlvdW5nc3Rvd24gU3RhdGUgVW5pdmVyc2l0eS5ub2luZGV4Ok9uZURyaXZlIC0gWW91bmdzdG93biBTdGF0ZSBVbml2ZXJzaXR5OmRvYzpteV9saWJyYXJ5OnBkZjpoYWFzIC0gOTcgLSBMYXJnZS1zYW1wbGUgYW5kIGRldGVybWluaXN0aWMgY29uZmlkZW5jZSBpbnRlcnZhbHMgZm9yIG9ubGluZSBhZ2dyZWdhdGlvbi5wZGYAAA4AtgBaAGgAYQBhAHMAIAAtACAAOQA3ACAALQAgAEwAYQByAGcAZQAtAHMAYQBtAHAAbABlACAAYQBuAGQAIABkAGUAdABlAHIAbQBpAG4AaQBzAHQAaQBjACAAYwBvAG4AZgBpAGQAZQBuAGMAZQAgAGkAbgB0AGUAcgB2AGEAbABzACAAZgBvAHIAIABvAG4AbABpAG4AZQAgAGEAZwBnAHIAZQBnAGEAdABpAG8AbgAuAHAAZABmAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIBCVVzZXJzL2Z5dS9MaWJyYXJ5L0dyb3VwIENvbnRhaW5lcnMvVUJGOFQzNDZHOS5PbmVEcml2ZVN0YW5kYWxvbmVTdWl0ZS9PbmVEcml2ZSAtIFlvdW5nc3Rvd24gU3RhdGUgVW5pdmVyc2l0eS5ub2luZGV4L09uZURyaXZlIC0gWW91bmdzdG93biBTdGF0ZSBVbml2ZXJzaXR5L2RvYy9teV9saWJyYXJ5L3BkZi9oYWFzIC0gOTcgLSBMYXJnZS1zYW1wbGUgYW5kIGRldGVybWluaXN0aWMgY29uZmlkZW5jZSBpbnRlcnZhbHMgZm9yIG9ubGluZSBhZ2dyZWdhdGlvbi5wZGYAABMAAS8AABUAAgAK//8AAAAIAA0AGgAkASoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAE0g==},
bdsk-url-1 = {https://doi.org/10.1109/SSDM.1997.621151}}

@inproceedings{Luo2011,
abstract = {Reverse top-k queries are recently proposed to help producers (or manufacturers) predict the popularity of a particular product. They can also help them design effective marketing strategies to advertise their products to a target audience. This paper designs an innovative algorithm, termed IRTA (Improved Reverse top-k Threshold Algorithm), to answer reverse top-k queries efficiently. Compared with the state-of-the-art RTA algorithm, it further reduces the number of expensive top-k queries. Besides, it utilizes the dominance and reverse-dominance relationships between the query product and the other products to cut down the cost of each top-k query. Comprehensive theoretical analyses and experimental studies show that IRTA is a more effective algorithm than RTA.},
author = {C. Luo and F. Yu and W.-C. Hou and Z. Jiang and D. Che and S. He},
date-added = {2022-01-10 07:29:47 -0500},
date-modified = {2022-01-10 07:29:47 -0500},
isbn = {9789898425539},
journal = {ICEIS 2011 - Proceedings of the 13th International Conference on Enterprise Information Systems},
keywords = {RTA,Reverse top-k queries},
title = {IRTA: An improved threshold algorithm for reverse top-k queries},
volume = {1 DISI},
year = {2011}}

@inproceedings{Yu2012,
abstract = {Optimizing executions of queries is the ultimate goal of a query optimizer. Unfortunately, due to the complexities of queries, accuracy of statistics, validities of assumptions, etc., query optimizers often cannot find the best execution plans in their search spaces, conveniently called the optimal plans, for the queries. In this paper, we consider gathering statistics for re-optimization of a large and useful set of queries, called repetitive queries. Repetitive queries refer to those queries that are likely to be used repeatedly or frequently in the future. They are usually stored in the database for convenient reuse over the long term. They deserve more optimization efforts than ordinary ad hoc queries. In this research, we identify statistics, called sufficient statistics, that are sufficient to compute (the exact frequency distributions of) the intermediate results of all plans of a query. The finding of the sufficient statistics makes it entirely possible for an optimizer to find a plan that is truly the best in its search space for the query.},
author = {F. Yu and W.-C. Hou and M. Wainer and C. Luo and D. Che},
date-added = {2022-01-10 07:29:47 -0500},
date-modified = {2022-01-10 07:29:47 -0500},
isbn = {9781880843840},
journal = {Proceedings of the ISCA 27th International Conference on Computers and Their Applications, CATA 2012},
keywords = {Query optimization,Query size estimation},
title = {Sufficient statistics for re-optimizing repetitive queries},
year = {2012}}

@inproceedings{Yu2015,
abstract = {Copyright {\copyright} 2015 by The International Society for Computers and Their Applications (ISCA). Optimizing write operations in out-of-core (or external memory) column-store databases is a wellknown challenge. By the employment of Timestamped Binary Association Table (or TBAT) and Asynchronous Out-of-Core Update (or AOC Update), updates on the out-of-core column-store database can be significantly improved. After a time period of AOC updates, the selection query performance on TBAT gradually decreases. In this work, we propose innovative online data cleaning approaches to solve the selection performance problem without the need of locking the table. Two different methods are introduced, an eager approach and a progressive approach to satisfy the cleaning speed priority and memory usage priority, respectively. Preliminary experiments show that the selection speed is significantly improved using the progressive online data cleaning approaches. In addition, the more the AOC updates, the greater the improvement is observed.},
author = {F. Yu and C. Luo and W.-C. Hou and E.S. Jones},
date-added = {2022-01-10 07:29:47 -0500},
date-modified = {2022-01-10 07:29:47 -0500},
isbn = {9781880843987},
journal = {Proceedings of the 30th International Conference on Computers and Their Applications, CATA 2015},
title = {Online data cleaning for out-of-core column-store databases with timestamped binary association tables},
year = {2015}}

@inproceedings{Almutairi2018,
abstract = {{\copyright} 2018 The International Society for Computers and Their Applications (ISCA). All rights reserved. Much research has been devoted to designing efficient join algorithms in the last few decades. In this paper, we compare two fastest join methods: Join indices and Join Core. Join indices generate index tables that contain tuples identifiers for matching tuples. Joins can be performed by scaning each input relation only once. On the other hand, Join Core is a data structure that stores join relationships to facilitate join query processing. With Join Core, join queries can be answered without having to perform costly join operations. We have implemented both methods and performed extensive experiments on TPC-H benchmark datasets and queries. Our experimental result shows that while both methods are much faster than conventional systems, such as MySQL, Join Core is the fastest.},
author = {R.M. Almutairi and M. Hamdi and F. Yu and W.-C. Hou},
date-added = {2022-01-10 07:29:47 -0500},
date-modified = {2022-01-10 07:29:47 -0500},
isbn = {9781943436101},
journal = {Proceedings of the 33rd International Conference on Computers and Their Applications, CATA 2018},
title = {Performance evaluations of two fast join query processing methods: Join core and join indices},
volume = {2018-March},
year = {2018}}

@article{Yu2018,
abstract = {Copyright {\copyright} 2018 Inderscience Enterprises Ltd. The column-store database is a representative of next generation databases featuring a high reading speed. Write optimisation in the out-of-core column-store database remains a well-known challenge. Timestamped binary association table (or TBAT) and asynchronous out-of-core update (or AOC update) have shown improvements in write performance. However, a common restriction shared by the timestamp-based approaches is that, after a time period of updates, the searching performance will gradually decrease. In this work, we introduce a new index, called Offset B + -tree (or OB-tree), to further improve the data retrieval speed after many updates have taken place. OB-tree is a flexible and robust index that employs a special pointer elimination strategy to reduce the storage costs. Succinctly designed, OB-tree can be easily integrated into existing timestamp-based column-store databases. Extensive experiments show that OB-tree can be efficiently constructed and significantly improves the data retrieval speed on the TBAT even when a large number of updates occurred.},
author = {F. Yu and T.J. Matacic and B.J. Latronica and W.-C. Hou},
date-added = {2022-01-10 07:29:47 -0500},
date-modified = {2022-01-10 07:29:47 -0500},
doi = {10.1504/IJIIDS.2018.10012700},
issn = {17515866},
issue = {1},
journal = {International Journal of Intelligent Information and Database Systems},
keywords = {B+-tree,Column-store database,Index,Write optimisation},
title = {OB-tree: A new write optimisation index on out-of-core column-store databases},
volume = {11},
year = {2018},
bdsk-url-1 = {https://doi.org/10.1504/IJIIDS.2018.10012700}}

@inproceedings{Wilson2019,
author = {David Wilson and Wen-Chi Hou and Feng Yu},
date-added = {2022-01-10 07:29:47 -0500},
date-modified = {2022-01-10 13:36:25 -0500},
doi = {10.29007/87vt},
editor = {Frederick Harris and Sergiu Dascalu and Sharad Sharma and Rui Wu},
issn = {2398-7340},
journal = {Proc. of 28th International Conference on Software Engineering and Data Engineering},
keywords = { aqp; database},
pages = {41-50},
publisher = {EasyChair},
title = {Scalable Correlated Sampling for Join Query Estimations on Big Data},
url = {https://easychair.org/publications/paper/RB13},
volume = {64},
year = {2019},
bdsk-url-1 = {https://easychair.org/publications/paper/RB13},
bdsk-url-2 = {https://doi.org/10.29007/87vt}}

@article{Sitaridi2013,
author = {Evangelia a. Sitaridi and Kenneth a. Ross},
date-added = {2022-01-10 07:14:26 -0500},
date-modified = {2022-01-10 13:26:52 -0500},
doi = {10.1145/2485278.2485282},
isbn = {9781450321969},
journal = {Proceedings of the Ninth International Workshop on Data Management on New Hardware - DaMoN '13},
keywords = { database},
pages = {1},
title = {Optimizing select conditions on GPUs},
url = {http://dl.acm.org/citation.cfm?doid=2485278.2485282},
year = {2013},
bdsk-url-1 = {http://dl.acm.org/citation.cfm?doid=2485278.2485282},
bdsk-url-2 = {https://doi.org/10.1145/2485278.2485282}}

@article{Faleiro2014,
abstract = {ABSTRACT Existing database systems employ an eager transaction processing scheme--- that is, upon receiving a transaction request, the system executes all the operations entailed in running the transaction (which typically includes reading database records, executing ...},
author = {Jose M Faleiro and Alexander Thomson and Daniel J Abadi},
date-added = {2022-01-10 07:14:26 -0500},
date-modified = {2022-01-10 13:26:52 -0500},
doi = {10.1145/2588555.2610529},
isbn = {9781450323765},
issn = {07308078},
journal = {Proceedings of the 2014 ACM SIGMOD international conference on Management of data - SIGMOD '14},
keywords = {acid transactions,deterministic database systems,load balancing},
pages = {15-26},
title = {Lazy Evaluation of Transactions in Database Systems},
url = {http://dl.acm.org/citation.cfm?doid=2588555.2610529},
year = {2014},
bdsk-url-1 = {http://dl.acm.org/citation.cfm?doid=2588555.2610529},
bdsk-url-2 = {https://doi.org/10.1145/2588555.2610529}}
